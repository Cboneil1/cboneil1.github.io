{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome Professors and Industry Experts","text":"","tags":["tag1","tag2"]},{"location":"#this-is-my-personal-website-for-class-314-mw-9am","title":"This is my personal website for class 314 MW 9am","text":"<p>Some things about me:</p> <ul> <li>I am studying Electrical Systems Engineering</li> <li>This is my first time taking a class with Dan Aukes</li> <li>I like to bake desserts as a hobby, but I dislike decorating food. I am in it for the bread</li> </ul>","tags":["tag1","tag2"]},{"location":"#i-am-not-a-morning-person-yet","title":"I am not a morning person, yet","text":"<p>But, I also do not drink coffee. WHAT??? you must feel so tired. Go figure</p> <ol> <li> <p>Is it hard to roll out of bed in the mornings without coffee?</p> <p>Yes:</p> <pre><code>if (DrinkCoffee== true){\n    panic_attack==HIGH;}\n</code></pre> </li> <li> <p>If I drink tea in the morning</p> <p>Tea doesnt help at all and it tastes bad</p> </li> <li> <p>Just dealing with it</p> </li> </ol> <p>Thanks for viewing. </p>","tags":["tag1","tag2"]},{"location":"test-file/","title":"Testing making a page","text":"<p>This is me adding a page</p>"},{"location":"Code/Code/","title":"Second Page","text":"<p>Things to discuss</p>"},{"location":"Datasheet/Block-Diagram/","title":"Block Diagram","text":"<p>Block Diagram for Microphone Input </p>"},{"location":"Page%20Design%20References/charts/","title":"Charts","text":"<pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre> <pre><code>sequenceDiagram\n  autonumber\n  Alice-&gt;&gt;John: Hello John, how are you?\n  loop Healthcheck\n      John-&gt;&gt;John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts!\n  John--&gt;&gt;Alice: Great!\n  John-&gt;&gt;Bob: How about you?\n  Bob--&gt;&gt;John: Jolly good!</code></pre> <pre><code>stateDiagram-v2\n  state fork_state &lt;&lt;fork&gt;&gt;\n    [*] --&gt; fork_state\n    fork_state --&gt; State2\n    fork_state --&gt; State3\n\n    state join_state &lt;&lt;join&gt;&gt;\n    State2 --&gt; join_state\n    State3 --&gt; join_state\n    join_state --&gt; State4\n    State4 --&gt; [*]</code></pre>"},{"location":"Page%20Design%20References/subfolder/","title":"This is the index to a subfolder","text":"<p>Things to discuss test</p>"},{"location":"Page%20Design%20References/subfolder/another-subfile/","title":"This is a secondary sub page","text":"<p>Things to discuss</p>"},{"location":"Selection%20Process/PIC%20Table%20Example/","title":"PIC Tables","text":""},{"location":"Selection%20Process/PIC%20Table%20Example/#table-1-component-selection","title":"Table 1: Component Selection","text":""},{"location":"Selection%20Process/PIC%20Table%20Example/#power-supply","title":"Power Supply","text":"Solution Pros Cons Option 1: TPS7A4700RGWT Surface mount linear voltage regulator  $5.86/each Link to product * Smaller footprint * Price Option 2: LM2675MX 3.3v 1A surface mount switching regulator  $4.36/each Link to product * Surface mount variation of the one we are familiar with from class * Bigger Footprint"},{"location":"Selection%20Process/PIC%20Table%20Example/#choice-option-2-lm2675mx-33v-1a-surface-mount-switching-regulator","title":"Choice: Option 2: LM2675MX 3.3v 1A surface mount switching regulator","text":"<p>Rationale: While the SOIC footprint takes up more space, ultimately it will be easier to solder to my PCB. The price is less expensive than the alternative, and it has less wasted pins. Less pins are better to work with because they reduce the chance for manufacturing errors from bridged solder. Design is also simpler.</p>"},{"location":"Selection%20Process/PIC%20Table%20Example/#signal-input","title":"Signal Input","text":"Solution Pros Cons Option 1: SPU0410HR5H-QB Surface-mount MEMS Microphone  $0.66/each Link to product * Small footprint  * Low power consumption * Limited frequency response  * Slightly lower sensitivity Option 2: CME-1538-100LB Electret Condenser Microphone  $3.53/each Link to product * Superior frequency response  * Higher sensitivity  * Well-matched impedance for project * Requires external biasing circuit  * Slightly larger footprint"},{"location":"Selection%20Process/PIC%20Table%20Example/#choice-option-2-cme-1538-100lb-electret-condenser-microphone","title":"Choice: Option 2: CME-1538-100LB Electret Condenser Microphone","text":"<p>Rationale: The slightly larger size is worth the improved sensitivity and frequency response. While the MEMS option is more compact, its limited range could impact signal quality, making the condenser microphone the better choice for this project.</p>"},{"location":"Selection%20Process/PIC%20Table%20Example/#amplification","title":"Amplification","text":"Solution Pros Cons Option 1: LM358DR General-Purpose Dual Op-Amp  $0.18/each Link to product * Inexpensive  * Readily available  * Simple to implement * Limited bandwidth  * Higher noise levels  * Input voltage range constraints Option 2: TLV2372IDR Rail-to-Rail Dual Op-Amp  $1.48/each Link to product * Rail-to-rail input and output  * Low noise performance  * Optimized for precision applications * Slightly higher cost  * Requires careful PCB layout for optimal performance"},{"location":"Selection%20Process/PIC%20Table%20Example/#choice-option-2-tlv2372idr-rail-to-rail-dual-op-amp","title":"Choice: Option 2: TLV2372IDR Rail-to-Rail Dual Op-Amp","text":"<p>Rationale: Despite the higher cost, the TLV2372IDR offers better precision and lower noise, which is essential for clean signal amplification. The LM358DR is cheaper but introduces unnecessary noise and has a limited input range, making it less ideal.</p>"},{"location":"Selection%20Process/PIC%20Table%20Example/#adc-analog-to-digital-converter","title":"ADC (Analog-to-Digital Converter)","text":"Solution Pros Cons Option 1: ADS1115IDGSR 16-Bit ADC with I\u00b2C Interface  $4.39/each Link to product * Cheaper alternative  * Integrated PGA  * Simple I\u00b2C interface * Lower resolution (16-bit vs. 24-bit)  * Higher noise floor  * Slower sampling rate Option 2: PCM1861DBTR 24-Bit Stereo ADC  $4.42/each Link to product * High-resolution 24-bit conversion  * Integrated PGA for flexibility  * Low noise and distortion * Slightly higher price  * Requires I\u00b2S communication setup"},{"location":"Selection%20Process/PIC%20Table%20Example/#choice-option-2-pcm1861dbtr-24-bit-stereo-adc","title":"Choice: Option 2: PCM1861DBTR 24-Bit Stereo ADC","text":"<p>Rationale: The higher resolution and lower noise make this ADC the superior choice. While the ADS1115IDGSR is cheaper and easier to implement, its lower resolution and noise performance could degrade signal accuracy, making it unsuitable for this project.</p>"},{"location":"Selection%20Process/PIC%20Table%20Example/#table-2-microcontroller-selection","title":"Table 2: Microcontroller Selection","text":""},{"location":"Selection%20Process/PIC%20Table%20Example/#pic18f47q10","title":"PIC18F47Q10","text":"PIC18F47Q10 Info Answer Help Model PIC18F47Q10 Product Page URL Product Datasheet URL(s) Datasheet Application Notes URL(s) Application Notes Vendor link Digikey Digikey, Jameco, etc. Do not paste links directly into the table. Use a link Code Examples GitHub Repository URL(s) for libraries on GitHub or other sites related to the microcontroller and your planned peripherals External Resources URL(s) YouTube Tutorial Search on Google and YouTube for other resources for each specific microcontroller. Unit cost Approximately $2.52 Find in the Microchip online store, or Digikey Absolute Maximum Current for entire IC 80 mA Find in the microcontroller datasheet Supply Voltage Range Min: 1.8V / Max: 5.5V Min / Nominal / Max / Absolute Max, as found in datasheet Maximum GPIO current (per pin) 25 mA As found in datasheet Supports External Interrupts? Yes As found in datasheet Required Programming Hardware, Cost, URL PICkit 5 In-Circuit Debugger, approximately $94.99 Found on the microcontroller's product page Works with MPLabX? Yes Required. See Microchip Development Tools Works with Microchip Code Configurator? Yes Can be validated in MPLabX. Screenshot required. Module # Available Needed Associated Pins (or * for any) GPIO 35 8 Ports A, B, C, D ADC N/A 0 not needed UART 1 1 RC6, RC7 SPI 1 1 MSSP Module I2C 1 1 I2C1 PWM N/A 0 not needed ICSP 1 1 RB7,RB6 ... ... ... ..."},{"location":"Selection%20Process/PIC%20Table%20Example/#pic18f25k50","title":"PIC18F25K50","text":"ESP Info Answer Help Model PIC18F25K50 Product Page URL Product Datasheet URL(s) Datasheet Application Notes URL(s) Application Notes Vendor link Digikey Digikey, Jameco, etc. Do not paste links directly into the table. Use a link. Code Examples Microchip Code Examples URL(s) for libraries on GitHub or other sites related to the microcontroller and your planned peripherals. External Resources URL(s) YouTube Tutorial Search on Google and YouTube for other resources for each specific microcontroller. Unit cost Approximately $3.80 Find in the Microchip online store, or Digikey. Absolute Maximum Current for entire IC 250 mA Find in the microcontroller datasheet. Supply Voltage Range Min: 1.8V / Max: 3.6V Min / Nominal / Max / Absolute Max, as found in datasheet. Maximum GPIO current (per pin) 25 mA As found in datasheet. Supports External Interrupts? Yes As found in datasheet. Required Programming Hardware, Cost, URL PICkit 5 In-Circuit Debugger, approximately $94.99 Found on the microcontroller's product page. Works with MPLabX? Yes Required. See Microchip Development Tools. Works with Microchip Code Configurator? Yes Can be validated in MPLabX. Screenshot required. Module # Available Needed Associated Pins (or * for any) GPIO 24 8 PortA, PortB, PortC ADC N/A 0 N/A UART 1 1 UART1 UART2 SPI 1 1 SPI1 SPI2 I2C 1 1 I2C1 I2C2 PWM N/A 0 N/A ICSP 1 1 RB7, RB6, etc. ... ... ... ..."},{"location":"Selection%20Process/PIC%20Table%20Example/#pic18f26k22","title":"PIC18F26K22","text":"ESP Info Answer Help Model PIC18F26K22 Product Page URL Product Datasheet URL(s) Datasheet Application Notes URL(s) Application Notes Vendor link Digikey Digikey, Jameco, etc. Do not paste links directly into the table. Use a link. Code Examples Microchip Code Examples URL(s) for libraries on GitHub or other sites related to the microcontroller and your planned peripherals. External Resources URL(s) YouTube Tutorial Search on Google and YouTube for other resources for each specific microcontroller. Unit cost Approximately $3.50 Find in the Microchip online store, or Digikey. Absolute Maximum Current for entire IC 250 mA Find in the microcontroller datasheet. Supply Voltage Range Min: 1.8V / Max: 3.6V Min / Nominal / Max / Absolute Max, as found in datasheet. Maximum GPIO current (per pin) 25 mA As found in datasheet. Supports External Interrupts? Yes As found in datasheet. Required Programming Hardware, Cost, URL PICkit 5 In-Circuit Debugger, approximately $94.99 Found on the microcontroller's product page. Works with MPLabX? Yes Required. See Microchip Development Tools. Works with Microchip Code Configurator? Yes Can be validated in MPLabX. Screenshot required. <pre><code>                                                                                    |\n</code></pre> Module # Available Needed Associated Pins (or * for any) GPIO 25 8 PortA, PortB, PortC ADC N/A 0 N/A UART 2 1 UART1 UART2 SPI 1 1 SPI1 SPI2 I2C 1 1 I2C1 I2C2 PWM N/A 0 N/A ICSP 1 1 RB7, RB6, etc. ... ... ... ..."},{"location":"Selection%20Process/PIC%20Table%20Example/#team-role","title":"Team Role","text":"<p>My project role is to record the input signal and transmit its modified output to the rest of the group. I am using an electret microphone to record human speech. A high pass filter will remove the extremely low frequency sounds that the electret microphone can pick up, limiting the lower frequencies to what a human voice can produce. My board will be individually powered by a 3.3v regulator. I am happy to share extra voltage if needed through our interconnected jumper wires. The information will be transmitted from my PIC board to the board responsible for output via SPI. My section has no display components. </p>"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"}]}